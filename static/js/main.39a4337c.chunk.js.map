{"version":3,"sources":["component/Home.js","component/NavBar.js","component/NasaPhoto.js","component/NasaRandomPhoto.js","component/NasaPhotosChoise.js","App.js","index.js"],"names":["Home","className","to","NavBar","apiKey","process","NasaPhoto","useState","photoData","setPhotoData","dateOfDay","setDay","dateOfMonth","setMonth","dateOfYear","setYear","dateOfPhotoSubmit","submitNewDate","useEffect","a","fetch","res","json","data","fetchPhoto","media_type","src","url","alt","title","frameBorder","gesture","allow","allowFullScreen","date","explanation","onSubmit","e","preventDefault","handleSubmit","htmlFor","id","type","max","min","value","onChange","target","handleChangeDay","handleChangeMonth","handleChangeYear","NasaRandomPhoto","another","getAnother","map","photo","onClick","NasaPhotosChoise","dateOfStartDay","setStartDay","dateOfStartMonth","setStartMonth","dateOfStartYear","setStartYear","dateOfEndDay","setEndDay","dateOfEndMonth","setEndMonth","dateOfEndYear","setEndYear","dateOfStartSubmit","submitStartDate","dateOfEndSubmit","submitEndDate","pageCount","setPageCount","activePage","changeActivePage","startPage","changeStartPage","endPage","changeEndPage","pageNumbers","setPageNumbers","changePage","number","console","log","length","pageNumbersNew","i","Math","ceil","push","slice","href","handleChangeStartDay","handleChangeStartMonth","handleChangeStartYear","handleChangeEndDay","handleChangeEndMonth","handleChangeEndYear","App","component","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39a4337c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <Link to=\"/nasaphoto\" className=\"home__link\">See into the stars</Link>\r\n            <Link to=\"/random-nasaphoto\" className=\"home__link\">See random 4 posts</Link>\r\n            <Link to=\"/nasa-photos-choise\" className=\"home__link\">See post of choisen dates</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function  NavBar() {\r\n    return (\r\n        <div className=\"navigation\">\r\n            <Link to=\"/nasa-app\" className=\"navigation__link\">Take me to the home</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function NasaPhoto() {\r\n    const [photoData, setPhotoData] = useState(null);\r\n    const [dateOfDay, setDay] = useState('01');\r\n    const [dateOfMonth, setMonth] = useState('02');\r\n    const [dateOfYear, setYear] = useState('2016');\r\n\r\n    const [dateOfPhotoSubmit, submitNewDate] = useState(\"2016-01-02\");\r\n\r\n    useEffect(() => {\r\n        fetchPhoto();\r\n\r\n        async function fetchPhoto() {\r\n            const res = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&date=${dateOfPhotoSubmit}`);\r\n            const data = await res.json();\r\n            setPhotoData(data);\r\n        }\r\n    }, [dateOfPhotoSubmit]);\r\n\r\n    function handleChangeDay(e) {\r\n        e.preventDefault();\r\n        setDay(e.target.value);\r\n    };\r\n\r\n    function handleChangeMonth(e) {\r\n        e.preventDefault();\r\n        setMonth(e.target.value);\r\n    };\r\n\r\n    function handleChangeYear(e) {\r\n        e.preventDefault();\r\n        setYear(e.target.value);\r\n    };\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        submitNewDate(`${dateOfYear}-${dateOfMonth}-${dateOfDay}`);\r\n    }\r\n\r\n    if (!photoData) return <div />;\r\n\r\n    return (\r\n        <div className=\"nasa-photo\">\r\n            <NavBar />\r\n            <div className=\"nasa-photo__card\">\r\n                <div className=\"nasa-photo__image\">\r\n                    {\r\n                        photoData.media_type === \"image\" ? (\r\n                            <img src={photoData.url} alt={photoData.title} />\r\n                        ) : (\r\n                            <iframe\r\n                                title=\"space-video\"\r\n                                src={photoData.url}\r\n                                frameBorder=\"0\"\r\n                                gesture=\"media\"\r\n                                allow=\"encrypted-media\"\r\n                                allowFullScreen\r\n                                className=\"photo\"\r\n                            />)\r\n                    }\r\n                </div>\r\n                <div className=\"nasa-photo__pin\">\r\n                    <h1 className=\"pin__title\">{photoData.title}</h1>\r\n                    <p className=\"pin__date\">{photoData.date}</p>\r\n                    <p className=\"pin__description\">{photoData.explanation}</p>\r\n                    <form onSubmit={(e) => handleSubmit(e)} className=\"nasa-photo__choise-from\">\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"day\">Day</label>\r\n                            <input id=\"day\" type=\"number\" max=\"31\" min=\"1\" value={dateOfDay} onChange={(e) => handleChangeDay(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"month\">Month</label>\r\n                            <input id=\"month\" type=\"number\" max=\"12\" min=\"1\" value={dateOfMonth} onChange={(e) => handleChangeMonth(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"year\">Year</label>\r\n                            <input id=\"year\" type=\"number\" min=\"1980\" max=\"2021\" value={dateOfYear} onChange={(e) => handleChangeYear(e)} />\r\n                        </div>\r\n                        <input className=\"pin__submit\" type=\"submit\" value=\"Get new post\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function NasaRandomPhoto() {\r\n    const [photoData, setPhotoData] = useState(null);\r\n    const [another, getAnother] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetchPhoto();\r\n\r\n        async function fetchPhoto() {\r\n            const res = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=4`);\r\n            const data = await res.json();\r\n            setPhotoData(data);\r\n        }\r\n    }, [another]);\r\n\r\n    function getAnotherPosts() {\r\n        let some = another+1;\r\n        getAnother(some);\r\n    }\r\n\r\n    if (!photoData) return <div />;\r\n\r\n    return (\r\n        <div className=\"nasa-random-photo\">\r\n            <NavBar />\r\n            {photoData.map( photo => (\r\n                <div className=\"nasa-photo__card\" key={photo.date}>\r\n                    <div className=\"nasa-photo__image\">\r\n                        {\r\n                            photo.media_type === \"image\" ? (\r\n                                <img src={photo.url} alt={photo.title} />\r\n                            ) : (\r\n                                <iframe\r\n                                    title=\"space-video\"\r\n                                    src={photoData.url}\r\n                                    frameBorder=\"0\"\r\n                                    gesture=\"media\"\r\n                                    allow=\"encrypted-media\"\r\n                                    allowFullScreen\r\n                                    className=\"photo\"\r\n                                />)\r\n                        }\r\n                    </div>\r\n                    <div className=\"nasa-photo__pin\">\r\n                        <h1 className=\"pin__title\">{photo.title}</h1>\r\n                        <p className=\"pin__date\">{photo.date}</p>\r\n                        <p className=\"pin__description\">{photo.explanation}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <button className=\"pin__submit\" onClick={() => getAnotherPosts()}>Get another random posts</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst apiKey = process.env.REACT_APP_NASA_KEY;\r\n\r\nexport default function NasaPhotosChoise() {\r\n    const [photoData, setPhotoData] = useState(null);\r\n\r\n    const [dateOfStartDay, setStartDay] = useState('02');\r\n    const [dateOfStartMonth, setStartMonth] = useState('01');\r\n    const [dateOfStartYear, setStartYear] = useState('2016');\r\n\r\n    const [dateOfEndDay, setEndDay] = useState('05');\r\n    const [dateOfEndMonth, setEndMonth] = useState('01');\r\n    const [dateOfEndYear, setEndYear] = useState('2016');\r\n\r\n    const [dateOfStartSubmit, submitStartDate] = useState('2016-01-02');\r\n    const [dateOfEndSubmit, submitEndDate] = useState('2016-01-05');\r\n\r\n\r\n    const [pageCount, setPageCount] = useState(12);\r\n    const [activePage, changeActivePage] = useState(1);\r\n    const [startPage, changeStartPage] = useState(1);\r\n    const [endPage, changeEndPage] = useState(4);\r\n    const [pageNumbers, setPageNumbers] = useState([]);\r\n    const perPage = 5;\r\n\r\n    useEffect(() => {\r\n        fetchPhoto();\r\n        setPageCount();\r\n\r\n        async function fetchPhoto() {\r\n            const res = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${dateOfStartSubmit}&end_date=${dateOfEndSubmit}`);\r\n            const data = await res.json();\r\n            setPhotoData(data);\r\n            console.log(data.length)\r\n            setPageCount(await data.length);\r\n            const pageNumbersNew = await [];\r\n            for (let i = 1; i <= Math.ceil(pageCount / perPage); i++) {\r\n                pageNumbersNew.push(i);\r\n            }\r\n            setPageNumbers(pageNumbersNew)\r\n            console.log(pageNumbers);\r\n        }\r\n    }, [dateOfStartSubmit, dateOfEndSubmit, pageNumbers]);\r\n\r\n    function handleChangeStartDay(e) {\r\n        e.preventDefault();\r\n        setStartDay(e.target.value);\r\n    };\r\n\r\n    function handleChangeStartMonth(e) {\r\n        e.preventDefault();\r\n        setStartMonth(e.target.value);\r\n    };\r\n\r\n    function handleChangeStartYear(e) {\r\n        e.preventDefault();\r\n        setStartYear(e.target.value);\r\n    };\r\n\r\n    function handleChangeEndDay(e) {\r\n        e.preventDefault();\r\n        setEndDay(e.target.value);\r\n    };\r\n\r\n    function handleChangeEndMonth(e) {\r\n        e.preventDefault();\r\n        setEndMonth(e.target.value);\r\n    };\r\n\r\n    function handleChangeEndYear(e) {\r\n        e.preventDefault();\r\n        setEndYear(e.target.value);\r\n    };\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        submitStartDate(`${dateOfStartYear}-${dateOfStartMonth}-${dateOfStartDay}`);\r\n        submitEndDate(`${dateOfEndYear}-${dateOfEndMonth}-${dateOfEndDay}`);\r\n    }\r\n\r\n    function changePage(number) {\r\n        changeActivePage(number);\r\n        changeEndPage(number * perPage);\r\n        changeStartPage((number - 1) * perPage);\r\n    }\r\n\r\n    if (!photoData) return <div />;\r\n\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {photoData.slice(startPage, endPage).map(photo => (\r\n                <div className=\"nasa-photo__card\" key={photo.date}>\r\n                    <div className=\"nasa-photo__image\">\r\n                        {\r\n                            photo.media_type === \"image\" ? (\r\n                                <img src={photo.url} alt={photo.title} />\r\n                            ) : (\r\n                                <iframe\r\n                                    title=\"space-video\"\r\n                                    src={photoData.url}\r\n                                    frameBorder=\"0\"\r\n                                    gesture=\"media\"\r\n                                    allow=\"encrypted-media\"\r\n                                    allowFullScreen\r\n                                    className=\"photo\"\r\n                                />)\r\n                        }\r\n                    </div>\r\n                    <div className=\"nasa-photo__pin\">\r\n                        <h1 className=\"pin__title\">{photo.title}</h1>\r\n                        <p className=\"pin__date\">{photo.date}</p>\r\n                        <p className=\"pin__description\">{photo.explanation}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            <ul className='pagination'>\r\n                {pageNumbers.map(number => (\r\n                    !(number == activePage) && (\r\n                        <li key={number} className='page-item'>\r\n                            <a onClick={() => changePage(number)} href='#' className=\"page-link\">{number}</a>\r\n                        </li>) ||\r\n                    (number == activePage) && (\r\n                        <li key={number} className='page-item'>\r\n                            <a onClick={() => changePage(number)} href='#' className=\"page-link page-link--active\">{number}</a>\r\n                        </li>)\r\n                ))}\r\n            </ul>\r\n            <form onSubmit={(e) => handleSubmit(e)} className=\"nasa-photo__choise-from\">\r\n                <div className=\"choise-from__start-end\">\r\n                    <div className=\"choise-from__start\">\r\n                        <h3 className=\"start__title\">Start day of searching</h3>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"day-start\">Day</label>\r\n                            <input id=\"day-start\" type=\"number\" max=\"31\" min=\"1\" value={dateOfStartDay} onChange={(e) => handleChangeStartDay(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"month-start\">Month</label>\r\n                            <input id=\"month-start\" type=\"number\" max=\"12\" min=\"1\" value={dateOfStartMonth} onChange={(e) => handleChangeStartMonth(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"year-start\">Year</label>\r\n                            <input id=\"year-start\" type=\"number\" min=\"1980\" max=\"2021\" value={dateOfStartYear} onChange={(e) => handleChangeStartYear(e)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"choise-from__end\">\r\n                        <h3 className=\"end__title\">End day of searching</h3>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"day-end\">Day</label>\r\n                            <input id=\"day-end\" type=\"number\" max=\"31\" min=\"1\" value={dateOfEndDay} onChange={(e) => handleChangeEndDay(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"month-end\">Month</label>\r\n                            <input id=\"month-end\" type=\"number\" max=\"12\" min=\"1\" value={dateOfEndMonth} onChange={(e) => handleChangeEndMonth(e)} />\r\n                        </div>\r\n                        <div className=\"pin__input\">\r\n                            <label htmlFor=\"year-end\">Year</label>\r\n                            <input id=\"year-end\" type=\"number\" min=\"1980\" max=\"2021\" value={dateOfEndYear} onChange={(e) => handleChangeEndYear(e)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input className=\"pin__submit\" type=\"submit\" value=\"Get new post\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./component/Home\";\nimport NasaPhoto from \"./component/NasaPhoto\";\nimport NasaRandomPhoto from \"./component/NasaRandomPhoto\";\nimport NasaPhotosChoise from \"./component/NasaPhotosChoise\";\nimport NavBar from \"./component/NavBar\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route component={Home} path=\"/nasa-app\" exact />\n        <Route component={NasaPhoto} path=\"/nasaphoto\" />\n        <Route component={NavBar} path=\"/navbar\" />\n        <Route component={NasaRandomPhoto} path=\"/random-nasaphoto\" />\n        <Route component={NasaPhotosChoise} path=\"/nasa-photos-choise\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}